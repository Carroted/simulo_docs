"use strict";(self.webpackChunksimulo_docs=self.webpackChunksimulo_docs||[]).push([[195],{8933:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>r,contentTitle:()=>s,default:()=>h,frontMatter:()=>l,metadata:()=>c,toc:()=>a});var i=o(4848),t=o(8453);const l={title:"core",description:"The core package is pre-installed in Simulo, and contains the built-in tools, objects and templates."},s="core",c={id:"api/core",title:"core",description:"The core package is pre-installed in Simulo, and contains the built-in tools, objects and templates.",source:"@site/docs/api/core.mdx",sourceDirName:"api",slug:"/api/core",permalink:"/api/core",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"core",description:"The core package is pre-installed in Simulo, and contains the built-in tools, objects and templates."},sidebar:"apiSidebar",previous:{title:"Vec2",permalink:"/api/Vec2"},next:{title:"Electricity",permalink:"/api/electricity"}},r={},a=[{value:"Functions",id:"functions",level:2},{value:"bolt",id:"bolt",level:3},{value:"hinge",id:"hinge",level:3},{value:"simulon",id:"simulon",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"core",children:"core"}),"\n",(0,i.jsxs)(n.p,{children:["Simulo comes with a pre-installed package named ",(0,i.jsx)(n.code,{children:"core"}),". You can find it like this:"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Open Simulo"}),"\n",(0,i.jsxs)(n.li,{children:["Click ",(0,i.jsx)(n.strong,{children:"File"})," \u2192 ",(0,i.jsx)(n.strong,{children:"Open Simulo Folder"})]}),"\n",(0,i.jsxs)(n.li,{children:["Go in \ud83d\udcc1 ",(0,i.jsx)(n.code,{children:"packages"})," folder"]}),"\n",(0,i.jsxs)(n.li,{children:["Go in \ud83d\udcc1 ",(0,i.jsx)(n.code,{children:"core"})," folder"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["All the built-in tools of Simulo (Drag Tool, Box Tool, etc.) are in the ",(0,i.jsx)(n.code,{children:"core/tools"})," folder. Built-in objects, like Simulons, are in ",(0,i.jsx)(n.code,{children:"core/objects"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"functions",children:"Functions"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"core"})," package contains some functions you can import with ",(0,i.jsx)(n.a,{href:"/api/require",children:(0,i.jsx)(n.code,{children:"require"})}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"bolt",children:"bolt"}),"\n",(0,i.jsxs)(n.p,{children:["If you add a bolt joint using the ",(0,i.jsx)(n.code,{children:"Scene:add_bolt"})," function, you'll see it works and connects the objects, but there is no visible joint in Simulo. That's because when you use the Bolt Tool, it's adding an ",(0,i.jsx)(n.a,{href:"/api/Attachment",children:"Attachment"})," for you, which manages the bolt joint."]}),"\n",(0,i.jsxs)(n.p,{children:["However, the Bolt Tool uses a public ",(0,i.jsx)(n.code,{children:"bolt"})," function which you can import and use yourself in your own scripts. Thus, you can add bolts in the same way as the tool, with a visible joint the user can remove. Here's how to do it:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"local bolt = require('core/lib/bolt.lua'); -- Import bolt function from core package\n\n-- Placeholder objects, you need to put real values!\nlocal object_a = ...;\nlocal object_b = ...;\nlocal point = vec2(0, 0); -- World point to add the bolt\n\nbolt({\n    object_a = object_a,\n    object_b = object_b,\n    point = point,\n\n    sound = true, -- Disable this for silent bolt\n    size = 0.3, -- Bolt Tool uses size of 0.3. This controls how large the bolt will look\n    color = Color:rgba(1, 1, 1, 0), -- We can set it to be invisible\n});\n"})}),"\n",(0,i.jsxs)(n.p,{children:["It has defaults, and so all you really need is ",(0,i.jsx)(n.code,{children:"object_a"}),", ",(0,i.jsx)(n.code,{children:"object_b"})," and ",(0,i.jsx)(n.code,{children:"point"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"hinge",children:"hinge"}),"\n",(0,i.jsxs)(n.p,{children:["If you add a hinge joint using the ",(0,i.jsx)(n.code,{children:"Scene:add_hinge"})," function, you'll see it works and connects the objects, but there is no visible joint in Simulo. That's because when you use the Hinge Tool, it's adding an ",(0,i.jsx)(n.a,{href:"/api/Attachment",children:"Attachment"})," for you, which manages the hinge joint."]}),"\n",(0,i.jsxs)(n.p,{children:["However, the Hinge Tool uses a public ",(0,i.jsx)(n.code,{children:"hinge"})," function which you can import and use yourself in your own scripts. Thus, you can add hinges in the same way as the tool, with a visible joint the user can remove. Here's how to do it:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"local hinge = require('core/lib/hinge.lua'); -- Import hinge function from core package\n\n-- Placeholder objects, you need to put real values!\nlocal object_a = ...;\nlocal object_b = ...;\nlocal point = vec2(0, 0); -- World point to add the bolt\n\nhinge({\n    object_a = object_a,\n    object_b = object_b,\n    point = point,\n\n    sound = true, -- Disable this for silent hinge\n    size = 0.3, -- Hinge Tool uses size of 0.3. This controls how large the hinge will look\n    color = Color:rgba(1, 1, 1, 0), -- We can set it to be invisible\n\n    -- These will default to having no motor, you can omit them.\n    motor_enabled = true,\n    motor_speed = 10,\n    max_motor_torque = 10,\n    \n    -- These also default to being off:\n    limit = true,\n    lower_limit_angle = 0.2, -- radians\n    upper_limit_angle = 0.2,\n});\n"})}),"\n",(0,i.jsxs)(n.p,{children:["It has defaults, and so all you really need is ",(0,i.jsx)(n.code,{children:"object_a"}),", ",(0,i.jsx)(n.code,{children:"object_b"})," and ",(0,i.jsx)(n.code,{children:"point"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"simulon",children:"simulon"}),"\n",(0,i.jsxs)(n.p,{children:["The Simulo mascot was built from Lua. You can use the ",(0,i.jsx)(n.code,{children:"core/lib/simulon.lua"})," function to spawn your own."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"local simulon = require('core/lib/simulon.lua'); -- Import simulon function from core package\n\nsimulon({\n    -- All fields have defaults\n    position = vec2(0, 0),\n    color = Color.SIMULO_GREEN,\n\n    -- We can also specify these:\n    -- size = 1,\n    -- density = 1,\n});\n"})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>s,x:()=>c});var i=o(6540);const t={},l=i.createContext(t);function s(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);