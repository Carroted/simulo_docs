"use strict";(self.webpackChunksimulo_docs=self.webpackChunksimulo_docs||[]).push([[21],{5984:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>c,metadata:()=>r,toc:()=>d});var i=t(4848),o=t(8453),s=t(7948);const c={sidebar_position:1},a="API Docs Introduction",r={id:"api/intro",title:"API Docs Introduction",description:"Welcome to the Simulo API Docs! From here, you can learn all about the various parts of Simulo's Luau scripting API.",source:"@site/docs/api/intro.mdx",sourceDirName:"api",slug:"/api/intro",permalink:"/api/intro",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"apiSidebar",next:{title:"Tools",permalink:"/api/tools/"}},l={},d=[{value:"Getting Started",id:"getting-started",level:2},{value:"Tools",id:"tools",level:4},{value:"Components",id:"components",level:4},{value:"Attachments",id:"attachments",level:4},{value:"Script Box",id:"script-box",level:2},{value:"What if I need it to stay?",id:"what-if-i-need-it-to-stay",level:4},{value:"Script Box Features",id:"script-box-features",level:3},{value:"Your First Script",id:"your-first-script",level:3},{value:"Vec2",id:"vec2",level:3},{value:"Why <code>:</code> instead of <code>.</code>?",id:"why--instead-of-",level:3},{value:"Adding Boxes",id:"adding-boxes",level:3},{value:"Rest Of The Owl",id:"rest-of-the-owl",level:3},{value:"Components",id:"components-1",level:2}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"api-docs-introduction",children:"API Docs Introduction"}),"\n",(0,i.jsx)(n.p,{children:"Welcome to the Simulo API Docs! From here, you can learn all about the various parts of Simulo's Luau scripting API."}),"\n",(0,i.jsx)(n.p,{children:"These docs currently assume an understanding of Lua fundamentals. If you're not familiar with Lua, please follow a Lua tutorial first, then come back here when you're ready. You may however still be able to follow if you're familiar with programming in general."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"Welcome",src:t(4971).A+"",width:"2994",height:"1612"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"getting-started",children:"Getting Started"}),"\n",(0,i.jsxs)(n.p,{children:["You probably want to create either a ",(0,i.jsx)(n.a,{href:"/api/tools",children:"Tool"}),", a ",(0,i.jsx)(n.a,{href:"/api/Component",children:"Component"}),", or an ",(0,i.jsx)(n.a,{href:"/api/Attachment",children:"Attachment"}),"."]}),"\n",(0,i.jsx)(n.h4,{id:"tools",children:"Tools"}),"\n",(0,i.jsx)(n.p,{children:"We can create powerful custom tools in Lua (all the built-in tools are also made in Lua)."}),"\n",(0,i.jsx)(n.h4,{id:"components",children:"Components"}),"\n",(0,i.jsx)(n.p,{children:"We can also make scripts that you add on objects and attachments in right-click."}),"\n",(0,i.jsx)(n.h4,{id:"attachments",children:"Attachments"}),"\n",(0,i.jsx)(n.p,{children:"We can even make visible gadgets, like a Hinge Tool's hinge, which you can right-click, and tweak its settings."}),"\n",(0,i.jsx)(n.h2,{id:"script-box",children:"Script Box"}),"\n",(0,i.jsx)(n.p,{children:"For everything except making custom tools, we can prototype it in the Script Box if we want."}),"\n",(0,i.jsxs)(n.p,{children:["To get it, use ",(0,i.jsx)(n.strong,{children:"File"})," \u2192 ",(0,i.jsx)(n.strong,{children:"Toggle Scripter UI"})," in-game."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"Simulo Script Box",src:t(8240).A+"",width:"2502",height:"1204"})}),"\n",(0,i.jsx)(n.h4,{id:"what-if-i-need-it-to-stay",children:"What if I need it to stay?"}),"\n",(0,i.jsxs)(n.p,{children:["If you don't want to do that every time, do ",(0,i.jsx)(n.strong,{children:"File"})," \u2192 ",(0,i.jsx)(n.strong,{children:"Open Simulo Folder"})," and open ",(0,i.jsx)(n.code,{children:"config.toml"})," and change the umm yeah its in there. You'll know when you see it"]}),"\n",(0,i.jsx)(n.h3,{id:"script-box-features",children:"Script Box Features"}),"\n",(0,i.jsx)(n.p,{children:"The Simulo Script Box has the following features:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\u2705 Luau syntax highlighting"}),"\n",(0,i.jsx)(n.li,{children:"\u2705 Line numbers"}),"\n",(0,i.jsx)(n.li,{children:"\u2705 Display of errors"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["The Simulo Script Box does ",(0,i.jsx)(n.strong,{children:"NOT"})," currently have the following features:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\u26d4 Static analysis"}),"\n",(0,i.jsx)(n.li,{children:"\u26d4 IntelliSense"}),"\n",(0,i.jsx)(n.li,{children:"\u26d4 Multiple files"}),"\n",(0,i.jsxs)(n.li,{children:["\u2705 Display of ",(0,i.jsx)(n.code,{children:"print"})," logs"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"print"})," will work again soon! Really soon! Super soon!"]}),"\n",(0,i.jsx)(n.h3,{id:"your-first-script",children:"Your First Script"}),"\n",(0,i.jsxs)(n.p,{children:["The Script Box runs one-shot global scripts on the scene. This means we run the code in the script once, in contrast to ",(0,i.jsx)(n.a,{href:"#components",children:"Components"}),", which can run code every ",(0,i.jsx)(n.code,{children:"Update"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Unfortunately for now, ",(0,i.jsx)(n.code,{children:"print"})," won't show anything in-game. Will be fixed soon but for now, use ",(0,i.jsx)(n.code,{children:"return"}),". If you want fake print, paste this in the box:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'local console = "";\n\nfunction print(msg)\n    console = console .. tostring(msg) .. "\\n";\nend;\n\n-- your code here\n\nreturn console;\n'})}),"\n",(0,i.jsx)(n.p,{children:"It's annoying but we do what it takes to Survive in simuland"}),"\n",(0,i.jsx)(n.p,{children:"Anyway back to Your First Script, do this:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'return "Hello, worlds!"; -- The string shows up in the Script Box\'s output\n'})}),"\n",(0,i.jsx)(n.h3,{id:"vec2",children:"Vec2"}),"\n",(0,i.jsxs)(n.p,{children:["Simulo uses ",(0,i.jsx)(s.A,{name:"vec2"})," all over the API to represent positions, sizes, velocities, etc. A ",(0,i.jsx)(s.A,{name:"vec2"})," has 2 fields: ",(0,i.jsx)(n.code,{children:"x"})," and ",(0,i.jsx)(n.code,{children:"y"}),". We create them using the ",(0,i.jsx)(n.code,{children:"vec2(x, y)"})," global constructor:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"local vec = vec2(5, 5); -- Creates a new Vec2 with `x` and `y` set to 5\n\nreturn vec; -- (5, 5)\n"})}),"\n",(0,i.jsxs)(n.p,{children:["We can perform most math operations on a ",(0,i.jsx)(s.A,{name:"vec2"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'local console = "";\n\nfunction print(msg)\n    console = console .. tostring(msg) .. "\\n";\nend;\n\nlocal a = vec2(1, 0);\nlocal b = vec2(0, 1);\n\n-- Addition\nprint(a + b); -- (1, 1)\n-- Subtraction\nprint(a - b); -- (1, -1)\n-- Multiplication\nprint(a * 2); -- (2, 0)\n-- Division\nprint(a / 2); -- (0.5, 0)\n-- Negation\nprint(-a); -- (-1, 0)\n\nreturn console;\n'})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(s.A,{name:"vec2"})," also has a ",(0,i.jsx)(n.code,{children:":magnitude()"})," function:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"-- We have to use `:` and not `.` here!\nlocal vec = vec2(1, 1);\nreturn vec:magnitude(); -- 1.41421...\n\n-- more Vec2 functions coming soon\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"why--instead-of-",children:["Why ",(0,i.jsx)(n.code,{children:":"})," instead of ",(0,i.jsx)(n.code,{children:"."}),"?"]}),"\n",(0,i.jsxs)(n.p,{children:["Someone very new to Lua might wonder why we have to use ",(0,i.jsx)(n.code,{children:":"})," instead of ",(0,i.jsx)(n.code,{children:"."})," to call the ",(0,i.jsx)(n.code,{children:"magnitude()"})," function on a ",(0,i.jsx)(s.A,{name:"vec2"}),", as in most programming languages that isn't the case."]}),"\n",(0,i.jsxs)(n.p,{children:["The answer is, the ",(0,i.jsx)(n.code,{children:":"})," operator passes the ",(0,i.jsx)(s.A,{name:"vec2"})," into the function as a hidden parameter. Here's an example:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"local vec = vec2(0, 0);\n\n-- Writing this:\nvec:magnitude();\n-- Is the same as writing this:\nvec.magnitude(vec);\n\n-- The first one passes in itself as a hidden parameter to the `magnitude` function,\n-- and in the second one, we use `.` (which doesn't do that) but we manually pass in `vec`.\n\n-- Thus, if we try to use `.` without passing in `vec`, we will get an error.\nvec.magnitude(); -- \u26d4 This will cause an error\n"})}),"\n",(0,i.jsx)(n.h3,{id:"adding-boxes",children:"Adding Boxes"}),"\n",(0,i.jsxs)(n.p,{children:["We can add boxes to the scene with the ",(0,i.jsx)(n.code,{children:"Scene:add_box"})," function. It takes a table with fields like position, size, etc."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"-- Add a red box to the scene\n\nScene:add_box({\n    position = vec2(0, 0),\n    size = vec2(1, 1),\n    body_type = BodyType.Dynamic, -- or BodyType.Static for unmoving\n    color = 0xff0000, -- Hex color\n});\n"})}),"\n",(0,i.jsxs)(n.p,{children:["If you paste this code in Simulo's Script Box and press ",(0,i.jsx)(n.code,{children:"Run"}),", you should see a red box appear. If the game isn't paused, it will fall to the ground."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Scene:add_box"})," returns an ",(0,i.jsx)(n.code,{children:"Object"}),". We can store this in a variable:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"local box = Scene:add_box({\n    position = vec2(0, 0),\n    size = vec2(1, 1),\n    body_type = BodyType.Dynamic,\n    color = 0xff0000,\n});\n\nbox:set_color(0x00ff00); -- Change color to green after creating\n"})}),"\n",(0,i.jsx)(n.p,{children:"Running the above code should produce a green box, even though we initially made it red. Insane"}),"\n",(0,i.jsx)(n.h3,{id:"rest-of-the-owl",children:"Rest Of The Owl"}),"\n",(0,i.jsx)(n.p,{children:"Now you may have some questions about how to accomplish specific things in the API, such as getting a reference to a specific object in the scene, getting a list of all the objects in the scene, etc."}),"\n",(0,i.jsxs)(n.p,{children:["You can find all the Scene API functions in the ",(0,i.jsx)(n.a,{href:"/api/Scene/",children:"Scene section of the API Docs"}),"."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"components-1",children:"Components"}),"\n",(0,i.jsx)(n.p,{children:"As said earlier, the Simulo Script Box can only run one-shot scripts. However, Simulo also provides Components, which allow placing scripts on objects, such as boxes, polygons, circles, etc."}),"\n",(0,i.jsx)(n.p,{children:"Components are very powerful and allow doing almost anything with scripting, even creating a platformer game in Simulo."}),"\n",(0,i.jsxs)(n.p,{children:["For a guide on how to use components, check out the ",(0,i.jsx)(n.a,{href:"/api/Component/",children:"Components section of the API Docs"}),"."]})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},7948:(e,n,t)=>{t.d(n,{A:()=>o});t(6540);var i=t(4848);function o(e){let{name:n}=e,t="/api/intro";"vec2"===n&&(t="/api/Vec2"),"object"===n&&(t="/api/Object"),"attachment"===n&&(t="/api/Attachment"),"hinge"===n&&(t="/api/joints/Hinge");let o=n;return"vec2"===n&&(o="Vec2"),"object"===n&&(o="Object"),"attachment"===n&&(o="Attachment"),"hash"===n&&(o="Component Hash"),"hinge"===n&&(o="Hinge"),(0,i.jsx)("a",{className:"type "+n,href:t,children:o})}},8240:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/script_box-e7a7cd08870262544de61efd46716934.png"},4971:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/welcome-414f854b548f113def7d16a27b81be03.png"},8453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>a});var i=t(6540);const o={},s=i.createContext(o);function c(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);