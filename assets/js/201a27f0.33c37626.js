"use strict";(self.webpackChunksimulo_docs=self.webpackChunksimulo_docs||[]).push([[196],{423:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>a,frontMatter:()=>i,metadata:()=>h,toc:()=>c});var o=t(4848),s=t(8453);const i={},r="Hinge",h={id:"api/joints/Hinge",title:"Hinge",description:"A hinge is a joint between 2 objects.",source:"@site/docs/api/joints/Hinge.mdx",sourceDirName:"api/joints",slug:"/api/joints/Hinge",permalink:"/api/joints/Hinge",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"FixedJoint",permalink:"/api/joints/FixedJoint"},next:{title:"Spring",permalink:"/api/joints/Spring"}},l={},c=[{value:"Fields",id:"fields",level:2},{value:".id",id:"id",level:3},{value:"Functions",id:"functions",level:2},{value:":destroy()",id:"destroy",level:3},{value:":is_destroyed()",id:"is_destroyed",level:3},{value:":get_local_anchor_a()",id:"get_local_anchor_a",level:3},{value:":get_local_anchor_b()",id:"get_local_anchor_b",level:3},{value:":set_local_anchor_a()",id:"set_local_anchor_a",level:3},{value:":set_local_anchor_b()",id:"set_local_anchor_b",level:3},{value:":get_world_anchor_a()",id:"get_world_anchor_a",level:3},{value:":get_world_anchor_b()",id:"get_world_anchor_b",level:3},{value:":get_force()",id:"get_force",level:3},{value:":get_angle()",id:"get_angle",level:3},{value:":get_torque()",id:"get_torque",level:3},{value:":get_motor_enabled()",id:"get_motor_enabled",level:3},{value:":set_motor_enabled()",id:"set_motor_enabled",level:3},{value:":get_motor_speed()",id:"get_motor_speed",level:3},{value:":set_motor_speed()",id:"set_motor_speed",level:3},{value:":get_max_motor_torque()",id:"get_max_motor_torque",level:3},{value:":set_max_motor_torque()",id:"set_max_motor_torque",level:3},{value:":get_motor_current_torque()",id:"get_motor_current_torque",level:3},{value:":get_object_a()",id:"get_object_a",level:3},{value:":get_object_b()",id:"get_object_b",level:3},{value:":get_collide_connected()",id:"get_collide_connected",level:3},{value:":get_type()",id:"get_type",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",hr:"hr",p:"p",...(0,s.R)(),...e.components},{Type:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Type",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"hinge",children:"Hinge"}),"\n",(0,o.jsx)(n.p,{children:"A hinge is a joint between 2 objects."}),"\n",(0,o.jsxs)(n.p,{children:["You can add these with ",(0,o.jsx)(n.code,{children:"Scene"}),"'s ",(0,o.jsx)(n.code,{children:"add_hinge"}),", but you are recommended to instead use the ",(0,o.jsxs)(n.a,{href:"/api/core",children:[(0,o.jsx)(n.code,{children:"core"})," ",(0,o.jsx)(n.code,{children:"hinge"})]})," function."]}),"\n",(0,o.jsxs)(n.p,{children:["If you use ",(0,o.jsx)(n.code,{children:"add_hinge"}),", you'll connect objects, but without a visible hinge attachment the user can remove. This is rarely useful, since it prevents the user from modifying or removing the joint. But, for example, if you select a Simulon, you'll see some invisible attachments for its spring, bolt, and hinge."]}),"\n",(0,o.jsxs)(n.p,{children:["So, if you want to add a visible hinge the user can remove (even if you want it to be invisible), use ",(0,o.jsx)(n.code,{children:"core"}),"'s ",(0,o.jsx)(n.code,{children:"hinge"}),". Otherwise, you can use ",(0,o.jsx)(n.code,{children:"add_hinge"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["The below functions concern returned hinge joints from ",(0,o.jsx)(n.code,{children:"add_hinge"}),", not ",(0,o.jsx)(n.code,{children:"core"}),"'s ",(0,o.jsx)(n.code,{children:"hinge"}),"."]}),"\n",(0,o.jsx)(n.h2,{id:"fields",children:"Fields"}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"id",children:".id"}),"\n",(0,o.jsxs)(n.p,{children:["Identifier for the hinge. Is a ",(0,o.jsx)(t,{name:"number"}),"."]}),"\n",(0,o.jsx)(n.h2,{id:"functions",children:"Functions"}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsxs)(n.p,{children:["Make sure to use ",(0,o.jsx)(n.code,{children:":function()"})," and not ",(0,o.jsx)(n.code,{children:".function()"}),", or you'll get an error"]})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"destroy",children:":destroy()"}),"\n",(0,o.jsx)(n.p,{children:"Destroys the hinge."}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"is_destroyed",children:":is_destroyed()"}),"\n",(0,o.jsx)(n.p,{children:"Returns whether or not the hinge still exists."}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"get_local_anchor_a",children:":get_local_anchor_a()"}),"\n",(0,o.jsxs)(n.p,{children:["Gets the anchor of the hinge on the first object as a ",(0,o.jsx)(t,{name:"vec2"}),"."]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"get_local_anchor_b",children:":get_local_anchor_b()"}),"\n",(0,o.jsxs)(n.p,{children:["Gets the anchor of the hinge on the second object as a ",(0,o.jsx)(t,{name:"vec2"}),"."]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"set_local_anchor_a",children:":set_local_anchor_a()"}),"\n",(0,o.jsxs)(n.p,{children:["Moves the anchor of the hinge on the first object to a ",(0,o.jsx)(t,{name:"vec2"}),". Note that this currently only works if the object_a is nil."]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"set_local_anchor_b",children:":set_local_anchor_b()"}),"\n",(0,o.jsxs)(n.p,{children:["Moves the anchor of the hinge on the second object to a ",(0,o.jsx)(t,{name:"vec2"}),". Note that this currently only works if the object_a is nil."]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"get_world_anchor_a",children:":get_world_anchor_a()"}),"\n",(0,o.jsxs)(n.p,{children:["Gets where the first anchor of the hinge is in the world as a ",(0,o.jsx)(t,{name:"vec2"}),"."]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"get_world_anchor_b",children:":get_world_anchor_b()"}),"\n",(0,o.jsxs)(n.p,{children:["Gets where the second anchor of the hinge is in the world as a ",(0,o.jsx)(t,{name:"vec2"}),"."]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"get_force",children:":get_force()"}),"\n",(0,o.jsxs)(n.p,{children:["Gets the force applied by the hinge as a ",(0,o.jsx)(t,{name:"vec2"}),"."]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"get_angle",children:":get_angle()"}),"\n",(0,o.jsxs)(n.p,{children:["Gets the angle of the hinge in radians as a ",(0,o.jsx)(t,{name:"number"}),"."]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"get_torque",children:":get_torque()"}),"\n",(0,o.jsxs)(n.p,{children:["Gets the torque applied by the hinge as a ",(0,o.jsx)(t,{name:"number"}),"."]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"get_motor_enabled",children:":get_motor_enabled()"}),"\n",(0,o.jsx)(n.p,{children:"Returns whether or not the hinge's motor is enabled."}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"set_motor_enabled",children:":set_motor_enabled()"}),"\n",(0,o.jsx)(n.p,{children:"Enables or disables the hinge's motor."}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"get_motor_speed",children:":get_motor_speed()"}),"\n",(0,o.jsxs)(n.p,{children:["Gets the speed of the hinge's motor as a ",(0,o.jsx)(t,{name:"number"}),"."]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"set_motor_speed",children:":set_motor_speed()"}),"\n",(0,o.jsx)(n.p,{children:"Sets the speed of the hinge's motor."}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"get_max_motor_torque",children:":get_max_motor_torque()"}),"\n",(0,o.jsxs)(n.p,{children:["Gets the maximum torque of the hinge's motor as a ",(0,o.jsx)(t,{name:"number"}),"."]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"set_max_motor_torque",children:":set_max_motor_torque()"}),"\n",(0,o.jsx)(n.p,{children:"Sets the maximum torque of the hinge's motor."}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"get_motor_current_torque",children:":get_motor_current_torque()"}),"\n",(0,o.jsxs)(n.p,{children:["Gets the current torque of the hinge's motor as a ",(0,o.jsx)(t,{name:"number"}),"."]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"get_object_a",children:":get_object_a()"}),"\n",(0,o.jsxs)(n.p,{children:["Gets the first object the hinge is attached to. Can be ",(0,o.jsx)(t,{name:"nil"})," if the hinge is connected to the world on that end."]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"get_object_b",children:":get_object_b()"}),"\n",(0,o.jsxs)(n.p,{children:["Gets the second object the hinge is attached to. Can be ",(0,o.jsx)(t,{name:"nil"})," if the hinge is connected to the world on that end."]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"get_collide_connected",children:":get_collide_connected()"}),"\n",(0,o.jsx)(n.p,{children:"Gets whether or not the object A will collide with object B"}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"get_type",children:":get_type()"}),"\n",(0,o.jsxs)(n.p,{children:['Returns "hinge". Mainly used after ',(0,o.jsx)(n.code,{children:"object:get_joints()"})," to determine what type of joint it is."]})]})}function a(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>h});var o=t(6540);const s={},i=o.createContext(s);function r(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function h(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);