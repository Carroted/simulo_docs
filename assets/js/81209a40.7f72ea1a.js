"use strict";(self.webpackChunksimulo_docs=self.webpackChunksimulo_docs||[]).push([[702],{7449:(e,l,n)=>{n.r(l),n.d(l,{assets:()=>r,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var t=n(4848),s=n(8453);const i={},a="Object",o={id:"api/Object",title:"Object",description:"All objects in a Simulo scene, such as boxes, circles, polygons, etc, are known to the API as s.",source:"@site/docs/api/Object.mdx",sourceDirName:"api",slug:"/api/Object",permalink:"/api/Object",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"Gizmos",permalink:"/api/Gizmos"},next:{title:"Player",permalink:"/api/Player"}},r={},d=[{value:"Fields",id:"fields",level:2},{value:".id",id:"id",level:3},{value:"Functions",id:"functions",level:2},{value:":destroy()",id:"destroy",level:3},{value:"Example",id:"example",level:4},{value:":get_linear_velocity()",id:"get_linear_velocity",level:3},{value:"Example",id:"example-1",level:4},{value:":set_linear_velocity()",id:"set_linear_velocity",level:3},{value:"Example",id:"example-2",level:4},{value:":get_angular_velocity()",id:"get_angular_velocity",level:3},{value:"Example",id:"example-3",level:4},{value:":apply_force_to_center()",id:"apply_force_to_center",level:3},{value:"Example",id:"example-4",level:4},{value:":apply_force()",id:"apply_force",level:3},{value:"Example",id:"example-5",level:4},{value:":apply_torque()",id:"apply_torque",level:3},{value:"Example",id:"example-6",level:4},{value:":apply_angular_impulse()",id:"apply_angular_impulse",level:3},{value:"Example",id:"example-7",level:4},{value:":apply_linear_impulse()",id:"apply_linear_impulse",level:3},{value:"Example",id:"example-8",level:4},{value:":apply_linear_impulse_to_center()",id:"apply_linear_impulse_to_center",level:3},{value:"Example",id:"example-9",level:4},{value:":get_mass()",id:"get_mass",level:3},{value:"Example",id:"example-10",level:4},{value:":set_angular_velocity()",id:"set_angular_velocity",level:3},{value:"Example",id:"example-11",level:4},{value:":get_position()",id:"get_position",level:3},{value:"Example",id:"example-12",level:4},{value:":get_pivot()",id:"get_pivot",level:3},{value:":set_position()",id:"set_position",level:3},{value:"Example",id:"example-13",level:4},{value:":send_event()",id:"send_event",level:3},{value:":get_angle()",id:"get_angle",level:3},{value:"Example",id:"example-14",level:4},{value:":set_angle()",id:"set_angle",level:3},{value:"Example",id:"example-15",level:4},{value:":get_direct_connected()",id:"get_direct_connected",level:3},{value:"Example",id:"example-16",level:4},{value:":get_touching()",id:"get_touching",level:3},{value:"Example",id:"example-17",level:4},{value:":get_sensed()",id:"get_sensed",level:3},{value:"Example",id:"example-18",level:4},{value:":get_all_bolted()",id:"get_all_bolted",level:3},{value:"Example",id:"example-19",level:4},{value:":get_name()",id:"get_name",level:3},{value:"Example",id:"example-20",level:4},{value:":set_name()",id:"set_name",level:3},{value:"Example",id:"example-21",level:4},{value:":get_color()",id:"get_color",level:3},{value:"Example",id:"example-22",level:4},{value:":set_color()",id:"set_color",level:3},{value:"Example",id:"example-23",level:4},{value:":get_z_index()",id:"get_z_index",level:3},{value:"Example",id:"example-24",level:4},{value:":get_restitution()",id:"get_restitution",level:3},{value:":set_restitution()",id:"set_restitution",level:3},{value:":get_friction()",id:"get_friction",level:3},{value:":set_friction()",id:"set_friction",level:3},{value:":get_gravity_scale()",id:"get_gravity_scale",level:3},{value:":set_gravity_scale()",id:"set_gravity_scale",level:3},{value:":get_linear_damping()",id:"get_linear_damping",level:3},{value:":set_linear_damping()",id:"set_linear_damping",level:3},{value:":get_angular_damping()",id:"get_angular_damping",level:3},{value:":set_angular_damping()",id:"set_angular_damping",level:3},{value:":get_body_type()",id:"get_body_type",level:3},{value:":set_body_type()",id:"set_body_type",level:3},{value:":get_ccd_enabled()",id:"get_ccd_enabled",level:3},{value:":set_ccd_enabled()",id:"set_ccd_enabled",level:3},{value:":get_is_sensor()",id:"get_is_sensor",level:3},{value:":get_is_awake()",id:"get_is_awake",level:3},{value:":set_is_awake()",id:"set_is_awake",level:3},{value:":get_density()",id:"get_density",level:3},{value:":set_density()",id:"set_density",level:3},{value:":get_local_point()",id:"get_local_point",level:3},{value:":get_world_point()",id:"get_world_point",level:3},{value:":get_components()",id:"get_components",level:3},{value:":get_joints()",id:"get_joints",level:3},{value:":get_hinges()",id:"get_hinges",level:3},{value:":get_bolts()",id:"get_bolts",level:3},{value:":get_springs()",id:"get_springs",level:3},{value:":get_fixed_joints()",id:"get_fixed_joints",level:3},{value:":get_collision_layers()",id:"get_collision_layers",level:3},{value:":set_collision_layers()",id:"set_collision_layers",level:3},{value:":add_component()",id:"add_component",level:3},{value:"Example",id:"example-25",level:4},{value:":get_type()",id:"get_type",level:3}];function c(e){const l={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components},{Type:n}=l;return n||function(e,l){throw new Error("Expected "+(l?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Type",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(l.h1,{id:"object",children:"Object"}),"\n",(0,t.jsxs)(l.p,{children:["All objects in a Simulo scene, such as boxes, circles, polygons, etc, are known to the API as ",(0,t.jsx)(n,{name:"object"}),"s."]}),"\n",(0,t.jsxs)(l.p,{children:["An ",(0,t.jsx)(n,{name:"object"})," reference is typically obtained by:"]}),"\n",(0,t.jsxs)(l.ul,{children:["\n",(0,t.jsxs)(l.li,{children:["Getting it with ",(0,t.jsx)(l.code,{children:"Scene:get_object"})]}),"\n",(0,t.jsxs)(l.li,{children:["Getting it with ",(0,t.jsx)(l.code,{children:"Scene:get_all_objects"})]}),"\n",(0,t.jsxs)(l.li,{children:["Using ",(0,t.jsx)(l.code,{children:"self"})," in a ",(0,t.jsx)(l.a,{href:"/api/Component/",children:"Component"})," script"]}),"\n"]}),"\n",(0,t.jsx)(l.h2,{id:"fields",children:"Fields"}),"\n",(0,t.jsx)(l.hr,{}),"\n",(0,t.jsx)(l.h3,{id:"id",children:".id"}),"\n",(0,t.jsxs)(l.p,{children:["Identifier for the object. Is a ",(0,t.jsx)(n,{name:"number"}),"."]}),"\n",(0,t.jsx)(l.h2,{id:"functions",children:"Functions"}),"\n",(0,t.jsx)(l.admonition,{type:"note",children:(0,t.jsxs)(l.p,{children:["Make sure to use ",(0,t.jsx)(l.code,{children:":function()"})," and not ",(0,t.jsx)(l.code,{children:".function()"}),", or you'll get an error"]})}),"\n",(0,t.jsx)(l.hr,{}),"\n",(0,t.jsx)(l.h3,{id:"destroy",children:":destroy()"}),"\n",(0,t.jsx)(l.p,{children:"Destroys the object. This will remove it from the scene and destroy its components."}),"\n",(0,t.jsx)(l.h4,{id:"example",children:"Example"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-lua",children:"self:destroy();\n"})}),"\n",(0,t.jsx)(l.hr,{}),"\n",(0,t.jsx)(l.h3,{id:"get_linear_velocity",children:":get_linear_velocity()"}),"\n",(0,t.jsxs)(l.p,{children:["Returns the linear velocity of the object as a ",(0,t.jsx)(n,{name:"vec2"}),". Measured in meters per second."]}),"\n",(0,t.jsx)(l.h4,{id:"example-1",children:"Example"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-lua",children:"local linvel = self:get_linear_velocity();\n"})}),"\n",(0,t.jsx)(l.hr,{}),"\n",(0,t.jsx)(l.h3,{id:"set_linear_velocity",children:":set_linear_velocity()"}),"\n",(0,t.jsxs)(l.p,{children:["Sets the linear velocity of the object to a ",(0,t.jsx)(n,{name:"vec2"}),". Measured in meters per second."]}),"\n",(0,t.jsxs)(l.p,{children:["Note that this will not behave realistically. You may want to use ",(0,t.jsx)(l.a,{href:"#apply_force_to_center",children:(0,t.jsx)(l.code,{children:":apply_force_to_center"})})," instead."]}),"\n",(0,t.jsx)(l.h4,{id:"example-2",children:"Example"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-lua",children:"self:set_linear_velocity(vec2(1, 1));\n"})}),"\n",(0,t.jsx)(l.hr,{}),"\n",(0,t.jsx)(l.h3,{id:"get_angular_velocity",children:":get_angular_velocity()"}),"\n",(0,t.jsxs)(l.p,{children:["Gets the angular velocity of the object as a ",(0,t.jsx)(n,{name:"number"}),". Measured in radians per second."]}),"\n",(0,t.jsx)(l.h4,{id:"example-3",children:"Example"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-lua",children:"local angvel = self:get_angular_velocity();\n"})}),"\n",(0,t.jsx)(l.hr,{}),"\n",(0,t.jsx)(l.h3,{id:"apply_force_to_center",children:":apply_force_to_center()"}),"\n",(0,t.jsx)(l.p,{children:"Applies a force to the center of mass."}),"\n",(0,t.jsx)(l.h4,{id:"example-4",children:"Example"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-lua",children:"self:apply_force_to_center(vec2(1, 1));\n"})}),"\n",(0,t.jsx)(l.hr,{}),"\n",(0,t.jsx)(l.h3,{id:"apply_force",children:":apply_force()"}),"\n",(0,t.jsx)(l.p,{children:"Applies a force to the object at a world point."}),"\n",(0,t.jsx)(l.h4,{id:"example-5",children:"Example"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-lua",children:"self:apply_force(vec2(1, 1), vec2(100, 100));\n"})}),"\n",(0,t.jsx)(l.hr,{}),"\n",(0,t.jsx)(l.h3,{id:"apply_torque",children:":apply_torque()"}),"\n",(0,t.jsx)(l.p,{children:"Applies a torque to the object."}),"\n",(0,t.jsx)(l.h4,{id:"example-6",children:"Example"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-lua",children:"self:apply_torque(100);\n"})}),"\n",(0,t.jsx)(l.hr,{}),"\n",(0,t.jsx)(l.h3,{id:"apply_angular_impulse",children:":apply_angular_impulse()"}),"\n",(0,t.jsx)(l.p,{children:"Applies an angular impulse to the object."}),"\n",(0,t.jsx)(l.h4,{id:"example-7",children:"Example"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-lua",children:"self:apply_angular_impulse(100);\n"})}),"\n",(0,t.jsx)(l.hr,{}),"\n",(0,t.jsx)(l.h3,{id:"apply_linear_impulse",children:":apply_linear_impulse()"}),"\n",(0,t.jsx)(l.p,{children:"Applies a linear impulse to the object at a world point."}),"\n",(0,t.jsx)(l.h4,{id:"example-8",children:"Example"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-lua",children:"self:apply_linear_impulse(vec2(1, 1), vec2(100, 100));\n"})}),"\n",(0,t.jsx)(l.hr,{}),"\n",(0,t.jsx)(l.h3,{id:"apply_linear_impulse_to_center",children:":apply_linear_impulse_to_center()"}),"\n",(0,t.jsx)(l.p,{children:"Applies a linear impulse to the object to the center of mass."}),"\n",(0,t.jsx)(l.h4,{id:"example-9",children:"Example"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-lua",children:"self:apply_linear_impulse_to_center(vec2(1, 1));\n"})}),"\n",(0,t.jsx)(l.hr,{}),"\n",(0,t.jsx)(l.h3,{id:"get_mass",children:":get_mass()"}),"\n",(0,t.jsxs)(l.p,{children:["Gets the mass of the object as a ",(0,t.jsx)(n,{name:"number"}),". Measured in uhh i forgot, check box2d docs"]}),"\n",(0,t.jsx)(l.h4,{id:"example-10",children:"Example"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-lua",children:"local mass = self:get_mass();\n"})}),"\n",(0,t.jsx)(l.hr,{}),"\n",(0,t.jsx)(l.h3,{id:"set_angular_velocity",children:":set_angular_velocity()"}),"\n",(0,t.jsxs)(l.p,{children:["Sets the angular velocity of the object to a ",(0,t.jsx)(n,{name:"number"}),". Measured in radians per second."]}),"\n",(0,t.jsx)(l.h4,{id:"example-11",children:"Example"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-lua",children:"self:set_angular_velocity(math.rad(10)); -- 10 degrees per second\n"})}),"\n",(0,t.jsx)(l.hr,{}),"\n",(0,t.jsx)(l.h3,{id:"get_position",children:":get_position()"}),"\n",(0,t.jsxs)(l.p,{children:["Gets the position of the object as a ",(0,t.jsx)(n,{name:"number"}),"."]}),"\n",(0,t.jsx)(l.h4,{id:"example-12",children:"Example"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-lua",children:"local pos = self:get_position();\n"})}),"\n",(0,t.jsx)(l.hr,{}),"\n",(0,t.jsx)(l.h3,{id:"get_pivot",children:":get_pivot()"}),"\n",(0,t.jsx)(l.p,{children:":set_angle rotates around it"}),"\n",(0,t.jsx)(l.hr,{}),"\n",(0,t.jsx)(l.h3,{id:"set_position",children:":set_position()"}),"\n",(0,t.jsxs)(l.p,{children:["Sets the position of the object to a ",(0,t.jsx)(n,{name:"number"}),"."]}),"\n",(0,t.jsx)(l.h4,{id:"example-13",children:"Example"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-lua",children:"self:set_position(vec2(100, 100));\n"})}),"\n",(0,t.jsx)(l.hr,{}),"\n",(0,t.jsx)(l.h3,{id:"send_event",children:":send_event()"}),"\n",(0,t.jsx)(l.p,{children:"Sends an event to the object, all its components, and all its attachments, and all components on those. Wow!"}),"\n",(0,t.jsx)(l.hr,{}),"\n",(0,t.jsx)(l.h3,{id:"get_angle",children:":get_angle()"}),"\n",(0,t.jsxs)(l.p,{children:["Gets the angle of the object as a ",(0,t.jsx)(n,{name:"number"}),". Measured in radians."]}),"\n",(0,t.jsx)(l.h4,{id:"example-14",children:"Example"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-lua",children:"local angle = self:get_angle();\n"})}),"\n",(0,t.jsx)(l.hr,{}),"\n",(0,t.jsx)(l.h3,{id:"set_angle",children:":set_angle()"}),"\n",(0,t.jsxs)(l.p,{children:["Sets the angle of the object to a ",(0,t.jsx)(n,{name:"number"}),". Measured in radians."]}),"\n",(0,t.jsx)(l.h4,{id:"example-15",children:"Example"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-lua",children:"self:set_angle(math.rad(45)); -- 45 degrees\n"})}),"\n",(0,t.jsx)(l.hr,{}),"\n",(0,t.jsx)(l.h3,{id:"get_direct_connected",children:":get_direct_connected()"}),"\n",(0,t.jsx)(l.p,{children:"Gets all objects directly connected to this object by joints. For example, if you hinge together a bunch of boxes to make a rope, this only returns the previous and next box in the rope, not the entire rope. Insane"}),"\n",(0,t.jsx)(l.h4,{id:"example-16",children:"Example"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-lua",children:"local objects = self:get_direct_connected();\n"})}),"\n",(0,t.jsx)(l.hr,{}),"\n",(0,t.jsx)(l.h3,{id:"get_touching",children:":get_touching()"}),"\n",(0,t.jsx)(l.p,{children:"Gets all objects this object is touching."}),"\n",(0,t.jsx)(l.h4,{id:"example-17",children:"Example"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-lua",children:"local objects = self:get_touching();\n"})}),"\n",(0,t.jsx)(l.hr,{}),"\n",(0,t.jsx)(l.h3,{id:"get_sensed",children:":get_sensed()"}),"\n",(0,t.jsx)(l.p,{children:"When called on a sensor, gets all objects it's currently overlapping."}),"\n",(0,t.jsx)(l.h4,{id:"example-18",children:"Example"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-lua",children:"local objects = self:get_sensed();\n"})}),"\n",(0,t.jsx)(l.hr,{}),"\n",(0,t.jsx)(l.h3,{id:"get_all_bolted",children:":get_all_bolted()"}),"\n",(0,t.jsx)(l.p,{children:"Gets all objects connected to this object by bolts. For example, if you make a giant chain of stuff bolted together, this will return the entire chain, not just the stuff this object is directly bolted to."}),"\n",(0,t.jsx)(l.h4,{id:"example-19",children:"Example"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-lua",children:"local objects = self:get_all_bolted();\n"})}),"\n",(0,t.jsx)(l.hr,{}),"\n",(0,t.jsx)(l.h3,{id:"get_name",children:":get_name()"}),"\n",(0,t.jsxs)(l.p,{children:["Gets the name of the object as a ",(0,t.jsx)(n,{name:"string"}),"."]}),"\n",(0,t.jsx)(l.h4,{id:"example-20",children:"Example"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-lua",children:"local name = self:get_name();\n"})}),"\n",(0,t.jsx)(l.hr,{}),"\n",(0,t.jsx)(l.h3,{id:"set_name",children:":set_name()"}),"\n",(0,t.jsxs)(l.p,{children:["Sets the name of the object to a ",(0,t.jsx)(n,{name:"string"}),"."]}),"\n",(0,t.jsx)(l.h4,{id:"example-21",children:"Example"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-lua",children:'self:set_name("Joe");\n'})}),"\n",(0,t.jsx)(l.hr,{}),"\n",(0,t.jsx)(l.h3,{id:"get_color",children:":get_color()"}),"\n",(0,t.jsxs)(l.p,{children:["Gets the color of the object as a ",(0,t.jsx)(n,{name:"color"}),"."]}),"\n",(0,t.jsx)(l.h4,{id:"example-22",children:"Example"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-lua",children:"local color = self:get_color();\n"})}),"\n",(0,t.jsx)(l.hr,{}),"\n",(0,t.jsx)(l.h3,{id:"set_color",children:":set_color()"}),"\n",(0,t.jsxs)(l.p,{children:["Sets the color of the object to a ",(0,t.jsx)(n,{name:"color"}),"."]}),"\n",(0,t.jsx)(l.h4,{id:"example-23",children:"Example"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-lua",children:"self:set_color(Color:rgb(1.0, 0.0, 0.0)); -- red\n"})}),"\n",(0,t.jsx)(l.hr,{}),"\n",(0,t.jsx)(l.h3,{id:"get_z_index",children:":get_z_index()"}),"\n",(0,t.jsxs)(l.p,{children:["Gets the Z index of the object as a ",(0,t.jsx)(n,{name:"number"}),"."]}),"\n",(0,t.jsx)(l.h4,{id:"example-24",children:"Example"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-lua",children:"local z_index = self:get_z_index();\n"})}),"\n",(0,t.jsx)(l.hr,{}),"\n",(0,t.jsx)(l.h3,{id:"get_restitution",children:":get_restitution()"}),"\n",(0,t.jsxs)(l.p,{children:["Gets the restitution of the object as a ",(0,t.jsx)(n,{name:"number"}),"."]}),"\n",(0,t.jsx)(l.hr,{}),"\n",(0,t.jsx)(l.h3,{id:"set_restitution",children:":set_restitution()"}),"\n",(0,t.jsxs)(l.p,{children:["Sets the restitution of the object to a ",(0,t.jsx)(n,{name:"number"}),"."]}),"\n",(0,t.jsx)(l.hr,{}),"\n",(0,t.jsx)(l.h3,{id:"get_friction",children:":get_friction()"}),"\n",(0,t.jsxs)(l.p,{children:["Gets the friction of the object as a ",(0,t.jsx)(n,{name:"number"}),"."]}),"\n",(0,t.jsx)(l.hr,{}),"\n",(0,t.jsx)(l.h3,{id:"set_friction",children:":set_friction()"}),"\n",(0,t.jsxs)(l.p,{children:["Sets the friction of the object to a ",(0,t.jsx)(n,{name:"number"}),"."]}),"\n",(0,t.jsx)(l.hr,{}),"\n",(0,t.jsx)(l.h3,{id:"get_gravity_scale",children:":get_gravity_scale()"}),"\n",(0,t.jsxs)(l.p,{children:["Gets the gravity scale of the object as a ",(0,t.jsx)(n,{name:"number"}),"."]}),"\n",(0,t.jsx)(l.hr,{}),"\n",(0,t.jsx)(l.h3,{id:"set_gravity_scale",children:":set_gravity_scale()"}),"\n",(0,t.jsxs)(l.p,{children:["Sets the gravity scale of the object to a ",(0,t.jsx)(n,{name:"number"}),"."]}),"\n",(0,t.jsx)(l.hr,{}),"\n",(0,t.jsx)(l.h3,{id:"get_linear_damping",children:":get_linear_damping()"}),"\n",(0,t.jsxs)(l.p,{children:["Gets the linear damping of the object as a ",(0,t.jsx)(n,{name:"number"}),"."]}),"\n",(0,t.jsx)(l.hr,{}),"\n",(0,t.jsx)(l.h3,{id:"set_linear_damping",children:":set_linear_damping()"}),"\n",(0,t.jsxs)(l.p,{children:["Sets the linear damping of the object to a ",(0,t.jsx)(n,{name:"number"}),"."]}),"\n",(0,t.jsx)(l.hr,{}),"\n",(0,t.jsx)(l.h3,{id:"get_angular_damping",children:":get_angular_damping()"}),"\n",(0,t.jsxs)(l.p,{children:["Gets the angular damping of the object as a ",(0,t.jsx)(n,{name:"number"}),"."]}),"\n",(0,t.jsx)(l.hr,{}),"\n",(0,t.jsx)(l.h3,{id:"set_angular_damping",children:":set_angular_damping()"}),"\n",(0,t.jsxs)(l.p,{children:["Sets the angular damping of the object to a ",(0,t.jsx)(n,{name:"number"}),"."]}),"\n",(0,t.jsx)(l.hr,{}),"\n",(0,t.jsx)(l.h3,{id:"get_body_type",children:":get_body_type()"}),"\n",(0,t.jsxs)(l.p,{children:["Gets the body type of the object. It will be equal to ",(0,t.jsx)(l.code,{children:"BodyType.Dynamic"}),", ",(0,t.jsx)(l.code,{children:"BodyType.Static"}),", or ",(0,t.jsx)(l.code,{children:"BodyType.Kinematic"}),"."]}),"\n",(0,t.jsx)(l.hr,{}),"\n",(0,t.jsx)(l.h3,{id:"set_body_type",children:":set_body_type()"}),"\n",(0,t.jsxs)(l.p,{children:["Sets the body type of the object. It can be ",(0,t.jsx)(l.code,{children:"BodyType.Dynamic"}),", ",(0,t.jsx)(l.code,{children:"BodyType.Static"}),", or ",(0,t.jsx)(l.code,{children:"BodyType.Kinematic"}),"."]}),"\n",(0,t.jsx)(l.hr,{}),"\n",(0,t.jsx)(l.h3,{id:"get_ccd_enabled",children:":get_ccd_enabled()"}),"\n",(0,t.jsx)(l.p,{children:"Gets whether continuous collision detection is enabled for the object."}),"\n",(0,t.jsx)(l.hr,{}),"\n",(0,t.jsx)(l.h3,{id:"set_ccd_enabled",children:":set_ccd_enabled()"}),"\n",(0,t.jsx)(l.p,{children:"Sets whether continuous collision detection is enabled for the object. It only applies when an object with CCD touches an object without CCD, so don't just enable it for everything. You should instead only put it on fast-moving objects, like bullets, ping-pong balls, etc."}),"\n",(0,t.jsx)(l.hr,{}),"\n",(0,t.jsx)(l.h3,{id:"get_is_sensor",children:":get_is_sensor()"}),"\n",(0,t.jsx)(l.p,{children:"Gets whether the object is a sensor. Sensors do not collide with other objects, but they still trigger collision events."}),"\n",(0,t.jsx)(l.hr,{}),"\n",(0,t.jsx)(l.h3,{id:"get_is_awake",children:":get_is_awake()"}),"\n",(0,t.jsx)(l.p,{children:"Gets whether the object is awake. Awake objects are actively simulated."}),"\n",(0,t.jsx)(l.hr,{}),"\n",(0,t.jsx)(l.h3,{id:"set_is_awake",children:":set_is_awake()"}),"\n",(0,t.jsx)(l.p,{children:"Sets whether the object is awake. Awake objects are actively simulated."}),"\n",(0,t.jsx)(l.hr,{}),"\n",(0,t.jsx)(l.h3,{id:"get_density",children:":get_density()"}),"\n",(0,t.jsxs)(l.p,{children:["Gets the density of the object as a ",(0,t.jsx)(n,{name:"number"}),"."]}),"\n",(0,t.jsx)(l.hr,{}),"\n",(0,t.jsx)(l.h3,{id:"set_density",children:":set_density()"}),"\n",(0,t.jsxs)(l.p,{children:["Sets the density of the object to a ",(0,t.jsx)(n,{name:"number"}),"."]}),"\n",(0,t.jsx)(l.hr,{}),"\n",(0,t.jsx)(l.h3,{id:"get_local_point",children:":get_local_point()"}),"\n",(0,t.jsx)(l.p,{children:"Get local point from a world one"}),"\n",(0,t.jsx)(l.hr,{}),"\n",(0,t.jsx)(l.h3,{id:"get_world_point",children:":get_world_point()"}),"\n",(0,t.jsx)(l.p,{children:"Get world point from a local one"}),"\n",(0,t.jsx)(l.hr,{}),"\n",(0,t.jsx)(l.h3,{id:"get_components",children:":get_components()"}),"\n",(0,t.jsx)(l.p,{children:"Gets a list of all the components attached to the object."}),"\n",(0,t.jsx)(l.hr,{}),"\n",(0,t.jsx)(l.h3,{id:"get_joints",children:":get_joints()"}),"\n",(0,t.jsxs)(l.p,{children:["Gets a list of all the joints attached to the object. You can use ",(0,t.jsx)(l.code,{children:":get_type()"})," on them to see what kind of joint they are."]}),"\n",(0,t.jsx)(l.hr,{}),"\n",(0,t.jsx)(l.h3,{id:"get_hinges",children:":get_hinges()"}),"\n",(0,t.jsx)(l.p,{children:"Gets a list of all the hinges attached to the object."}),"\n",(0,t.jsx)(l.hr,{}),"\n",(0,t.jsx)(l.h3,{id:"get_bolts",children:":get_bolts()"}),"\n",(0,t.jsx)(l.p,{children:"Gets a list of all the bolts attached to the object."}),"\n",(0,t.jsx)(l.hr,{}),"\n",(0,t.jsx)(l.h3,{id:"get_springs",children:":get_springs()"}),"\n",(0,t.jsx)(l.p,{children:"Gets a list of all the springs attached to the object."}),"\n",(0,t.jsx)(l.hr,{}),"\n",(0,t.jsx)(l.h3,{id:"get_fixed_joints",children:":get_fixed_joints()"}),"\n",(0,t.jsx)(l.p,{children:"Gets a list of all the fixed joints attached to the object."}),"\n",(0,t.jsx)(l.hr,{}),"\n",(0,t.jsx)(l.h3,{id:"get_collision_layers",children:":get_collision_layers()"}),"\n",(0,t.jsx)(l.p,{children:"Gets the list of collision layers this object is in."}),"\n",(0,t.jsx)(l.hr,{}),"\n",(0,t.jsx)(l.h3,{id:"set_collision_layers",children:":set_collision_layers()"}),"\n",(0,t.jsx)(l.p,{children:"Sets the list of collision layers this object is in."}),"\n",(0,t.jsx)(l.hr,{}),"\n",(0,t.jsx)(l.h3,{id:"add_component",children:":add_component()"}),"\n",(0,t.jsx)(l.p,{children:'Adds a component to the object. It will not be started immediately, but rather remain "sleeping" until the next step when the scene isn\'t paused. This is so we edit component values in right-click menus before the component is started.'}),"\n",(0,t.jsx)(l.h4,{id:"example-25",children:"Example"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-lua",children:'local component = self:add_component({ hash = "<Some hash>" });\n\nlocal component = self:add_component({\n    hash = "<Some hash>",\n    -- optionally, we can pass data which it\'ll get in `on_start`.\n    saved_data = {\n        some_value = 10,\n    },\n\n    -- for Advanced Use we can also give a `properties` table, but its not always a good idea since you need to pass everything about the properties, like the id, name, input_type, value, settings etc\n    -- and so if you pass `properties`, you have to set all of them, or they\'ll be missing\n    -- so, if thats not what you want, you should instead do component:set_property after adding the component, like:\n    -- ```\n    -- local prop = component:get_property("some_property_id");\n    -- prop.value = 10;\n    -- component:set_property("some_property_id", prop);\n    -- ```\n});\n'})}),"\n",(0,t.jsx)(l.hr,{}),"\n",(0,t.jsx)(l.h3,{id:"get_type",children:":get_type()"}),"\n",(0,t.jsxs)(l.p,{children:["Returns ",(0,t.jsx)(l.code,{children:'"object"'}),"."]})]})}function h(e={}){const{wrapper:l}={...(0,s.R)(),...e.components};return l?(0,t.jsx)(l,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,l,n)=>{n.d(l,{R:()=>a,x:()=>o});var t=n(6540);const s={},i=t.createContext(s);function a(e){const l=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(l):{...l,...e}}),[l,e])}function o(e){let l;return l=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(i.Provider,{value:l},e.children)}}}]);