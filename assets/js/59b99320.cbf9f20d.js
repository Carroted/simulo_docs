"use strict";(self.webpackChunksimulo_docs=self.webpackChunksimulo_docs||[]).push([[656],{3319:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>a,frontMatter:()=>s,metadata:()=>c,toc:()=>l});var i=t(4848),o=t(8453);const s={title:"Joints",description:"Simulo has springs, hinges, bolts and fixed joints."},r="Joints",c={id:"api/joints/joints",title:"Joints",description:"Simulo has springs, hinges, bolts and fixed joints.",source:"@site/docs/api/joints/joints.mdx",sourceDirName:"api/joints",slug:"/api/joints/",permalink:"/api/joints/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Joints",description:"Simulo has springs, hinges, bolts and fixed joints."},sidebar:"apiSidebar",previous:{title:"Electricity",permalink:"/api/electricity"},next:{title:"Bolt",permalink:"/api/joints/Bolt"}},d={},l=[{value:"Bolt",id:"bolt",level:2},{value:"Hinge",id:"hinge",level:2},{value:"Fixed Joint",id:"fixed-joint",level:2},{value:"Spring",id:"spring",level:2}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"joints",children:"Joints"}),"\n",(0,i.jsx)(n.p,{children:"We have 4 types of joints:"}),"\n",(0,i.jsx)(n.h2,{id:"bolt",children:"Bolt"}),"\n",(0,i.jsxs)(n.p,{children:["These lock all movement between two objects. You'd usually add them with ",(0,i.jsxs)(n.a,{href:"/api/core",children:[(0,i.jsx)(n.code,{children:"core"}),"'s bolt function"]}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"hinge",children:"Hinge"}),"\n",(0,i.jsxs)(n.p,{children:["These allow rotation between 2 objects, but restrict movement between the joint anchors. You'd usually add them with ",(0,i.jsxs)(n.a,{href:"/api/core",children:[(0,i.jsx)(n.code,{children:"core"}),"'s hinge function"]}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"fixed-joint",children:"Fixed Joint"}),"\n",(0,i.jsxs)(n.p,{children:["These try to stop movement between two objects, but they do it with a force. The end result is a wobbly connection between the objects. Unlike ",(0,i.jsx)(n.code,{children:"bolt"})," and ",(0,i.jsx)(n.code,{children:"hinge"}),", there is currently no ",(0,i.jsx)(n.code,{children:"core"})," function to add these. You need to use ",(0,i.jsx)(n.code,{children:"Scene:add_fixed_joint"})," for now, which gives you full direct control over the joint."]}),"\n",(0,i.jsx)(n.h2,{id:"spring",children:"Spring"}),"\n",(0,i.jsxs)(n.p,{children:["These pull or push objects to have the spring points be at a specified distance from eachother. Unlike ",(0,i.jsx)(n.code,{children:"bolt"})," and ",(0,i.jsx)(n.code,{children:"hinge"}),", there is currently no ",(0,i.jsx)(n.code,{children:"core"})," function to add these. You need to use ",(0,i.jsx)(n.code,{children:"Scene:add_spring"})," for now, which gives you full direct control over the joint."]})]})}function a(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>c});var i=t(6540);const o={},s=i.createContext(o);function r(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);