"use strict";(self.webpackChunksimulo_docs=self.webpackChunksimulo_docs||[]).push([[325],{1775:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>a,toc:()=>l});var i=t(4848),r=t(8453);const s={title:"require",description:"The `require` function allows importing functions, assets and components in Simulo."},o="require",a={id:"api/require/require",title:"require",description:"The `require` function allows importing functions, assets and components in Simulo.",source:"@site/docs/api/require/require.mdx",sourceDirName:"api/require",slug:"/api/require/",permalink:"/api/require/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"require",description:"The `require` function allows importing functions, assets and components in Simulo."},sidebar:"apiSidebar",previous:{title:"Packages",permalink:"/api/packages"},next:{title:"AssetInstance",permalink:"/api/require/AssetInstance"}},c={},l=[];function u(e){const n={a:"a",code:"code",h1:"h1",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"require",children:"require"}),"\n",(0,i.jsxs)(n.p,{children:["In Simulo, we have the global ",(0,i.jsx)(n.code,{children:"require"})," function. It's available in components and the script box, but NOT directly in tools. To use it in tools, you'll need ",(0,i.jsx)(n.a,{href:"/api/tools/RemoteScene",children:(0,i.jsx)(n.code,{children:"RemoteScene:run"})}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"require"})," is what you use to import things like:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Lua variables or functions"}),"\n",(0,i.jsx)(n.li,{children:"Assets (images, audio, etc.)"}),"\n",(0,i.jsx)(n.li,{children:"Components"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["It can only load things in your Simulo folder. You can either use a relative path (like ",(0,i.jsx)(n.code,{children:"./packages/@user/package/..."}),"), or a package path (like ",(0,i.jsx)(n.code,{children:"@user/package/..."}),"). You can use either, the only difference is the latter is shorter and cleaner."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"-- You can use a package path like @user/package/... to import\nlocal image = require('@joe/stuff/assets/image.png'); -- resolves to ./packages/@joe/...\n\n-- Or you can use a path relative to the Simulo folder directly:\nlocal audio = require('./objects/my_object/scream.wav');\n\nlocal texture = require('core/assets/textures/point_light.png');\n\nlocal some_value = require('./some_script.lua'); -- it runs the script. anything that isn't `local` is now in our here. whatever that script returns is the return value of the `require`\n"})}),"\n",(0,i.jsx)(n.p,{children:"Lastly, you can pass a second parameter, to force it to load the thing in a certain type. By default, it'll guess based on the file extension. But we can do this:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"local code = require('./packages/core/attachments/camera/attachment.lua', 'string');\n"})}),"\n",(0,i.jsxs)(n.p,{children:["That forces the Lua to load as a string, instead of running it. Wow! You can also set to ",(0,i.jsx)(n.code,{children:"texture"}),", ",(0,i.jsx)(n.code,{children:"lua"}),", ",(0,i.jsx)(n.code,{children:"audio"}),", ",(0,i.jsx)(n.code,{children:"component"})," fr."]})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var i=t(6540);const r={},s=i.createContext(r);function o(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);